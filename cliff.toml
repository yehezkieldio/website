[changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}
{% if version %}\
    # [{{ version | trim_start_matches(pat="v") }}]\
    {% if previous %}\
        {% if previous.version %}\
            ({{ self::remote_url() }}/compare/{{ previous.version }}...{{ version }})\
        {% else %}\
            ({{ self::remote_url() }}/tree/{{ version }})\
        {% endif %}\
    {% endif %} \
    ({{ timestamp | date(format="%Y-%m-%d") }})
{% else %}\
    # [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ## {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}\
            **{{commit.scope}}:** \
          {% endif %}\
            {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
            {% if commit.remote.pr_number %} (\
                [#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }}) by @{{ commit.remote.username }}) \
            {%- endif %}\
        {% if commit.breaking %}\
            {% for breakingChange in commit.footers %}\
                \n{% raw %}  {% endraw %}- **{{ breakingChange.token }}{{ breakingChange.separator }}** {{ breakingChange.value }}\
            {% endfor %}\
        {% endif %}\
    {% endfor %}
{% endfor %}\n
"""
footer = ""
trim = true
postprocessors = []

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_preprocessors = []
commit_parsers = [
  { message = "^fix\\(deps\\)", group = "<!-- 8 -->Dependencies" },
  { message = "^chore\\(deps\\)", group = "<!-- 8 -->Dependencies" },
  { message = "^feat", group = "<!-- 0 -->Features" },
  { message = "^fix", group = "<!-- 1 -->Bug Fixes" },
  { message = "^doc", group = "<!-- 2 -->Documentation" },
  { message = "^perf", group = "<!-- 3 -->Performance" },
  { message = "^refactor", group = "<!-- 4 -->Refactor" },
  { message = "^style", group = "<!-- 5 -->Styling" },
  { message = "^test", group = "<!-- 6 -->Testing" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->Security" },
  { message = "^revert", group = "<!-- 9 -->Revert" },
  { message = ".*", group = "<!-- 10 -->Other" },
]
filter_commits = false
topo_order = false
sort_commits = "oldest"

[remote.github]
owner = "yehezkieldio"
repo = "website"